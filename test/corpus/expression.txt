================================================================================
[expression] reference
================================================================================

this

--------------------------------------------------------------------------------

(source_file
  (ref))

================================================================================
[expression] function call
================================================================================

println(x)

--------------------------------------------------------------------------------

(source_file
  (call_expr
    (ref)
    (arguments
      (argument
        (ref)))))

================================================================================
[expression] while with braces
================================================================================

while (true) {
  println(x)
}

--------------------------------------------------------------------------------

(source_file
  (while_expr
    (boolean_literal)
    (block
      (call_expr
        (ref)
        (arguments
          (argument
            (ref)))))))

================================================================================
[expression] while without braces
================================================================================

while true do {
  foo(x, y)
}

--------------------------------------------------------------------------------

(source_file
  (while_expr
    (boolean_literal)
    (block
      (call_expr
        (ref)
        (arguments
          (argument
            (ref))
          (argument
            (ref)))))))

================================================================================
[expression] throw
================================================================================

throw new Exception("boom!")

--------------------------------------------------------------------------------

(source_file
  (throw_expr
    (instance_expr
      (constr_app
        (argument
          (string_literal))))))

================================================================================
[expression] return
================================================================================

return foo(x)

--------------------------------------------------------------------------------

(source_file
  (return_expr
    (call_expr
      (ref)
      (arguments
        (argument
          (ref))))))

================================================================================
[expression] inline
================================================================================

inline foo match {
  case x: String => y
}

--------------------------------------------------------------------------------

(source_file
  (inline_expr
    (ref)
    (match_clause
      (case_clauses
        (case_clause
          (pattern
            (ref))
          (block
            (ref)))))))
